[{"/Users/miraheckmann/Desktop/proj3-client/src/index.js":"1","/Users/miraheckmann/Desktop/proj3-client/src/App.js":"2","/Users/miraheckmann/Desktop/proj3-client/src/reportWebVitals.js":"3","/Users/miraheckmann/Desktop/proj3-client/src/services/userService.js":"4","/Users/miraheckmann/Desktop/proj3-client/src/components/Footer/index.js":"5","/Users/miraheckmann/Desktop/proj3-client/src/components/Header/index.js":"6","/Users/miraheckmann/Desktop/proj3-client/src/pages/Dashboard/index.js":"7","/Users/miraheckmann/Desktop/proj3-client/src/pages/Signup/index.js":"8","/Users/miraheckmann/Desktop/proj3-client/src/pages/Home/index.js":"9","/Users/miraheckmann/Desktop/proj3-client/src/pages/Login/index.js":"10","/Users/miraheckmann/Desktop/proj3-client/src/services/tokenService.js":"11","/Users/miraheckmann/Desktop/proj3-client/src/services/geolocation.js":"12","/Users/miraheckmann/Desktop/proj3-client/src/components/Locate/Locate.js":"13","/Users/miraheckmann/Desktop/proj3-client/src/pages/Dashboard/map-style.js":"14","/Users/miraheckmann/Desktop/proj3-client/src/services/areasService.js":"15"},{"size":593,"mtime":1609995302538,"results":"16","hashOfConfig":"17"},{"size":2813,"mtime":1611193726333,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1609799595906,"results":"19","hashOfConfig":"17"},{"size":1041,"mtime":1609995302540,"results":"20","hashOfConfig":"17"},{"size":277,"mtime":1609995302537,"results":"21","hashOfConfig":"17"},{"size":1087,"mtime":1610151550799,"results":"22","hashOfConfig":"17"},{"size":4283,"mtime":1611363185223,"results":"23","hashOfConfig":"17"},{"size":1812,"mtime":1611179763603,"results":"24","hashOfConfig":"17"},{"size":124,"mtime":1610084334324,"results":"25","hashOfConfig":"17"},{"size":1490,"mtime":1611179866110,"results":"26","hashOfConfig":"17"},{"size":700,"mtime":1609995302540,"results":"27","hashOfConfig":"17"},{"size":287,"mtime":1610663422238,"results":"28","hashOfConfig":"17"},{"size":614,"mtime":1611014844044,"results":"29","hashOfConfig":"17"},{"size":4509,"mtime":1611011806439,"results":"30","hashOfConfig":"17"},{"size":580,"mtime":1611359215676,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"kth33i",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"/Users/miraheckmann/Desktop/proj3-client/src/index.js",[],["66","67"],"/Users/miraheckmann/Desktop/proj3-client/src/App.js",[],"/Users/miraheckmann/Desktop/proj3-client/src/reportWebVitals.js",[],"/Users/miraheckmann/Desktop/proj3-client/src/services/userService.js",[],"/Users/miraheckmann/Desktop/proj3-client/src/components/Footer/index.js",[],"/Users/miraheckmann/Desktop/proj3-client/src/components/Header/index.js",[],"/Users/miraheckmann/Desktop/proj3-client/src/pages/Dashboard/index.js",["68","69"],"import { GoogleMap, useLoadScript, Marker, InfoWindow, Polygon} from '@react-google-maps/api';\nimport { useState, useCallback, useRef, useEffect  } from 'react';\nimport mapStyles from './map-style';\nimport { formatRelative, setISOWeekYear } from 'date-fns';\nimport Locate from '../../components/Locate/Locate';\nimport { fetchAreas, addAreas } from '../../services/areasService';\n\n\nconst mapContainerStyle = {\n  width: '100vw',\n  height: '100vh'\n};\n\nconst options = {\n  styles: mapStyles,\n  disableDefaultUI: true,\n  zoomControl: true,\n}\n\n\nfunction Dashboard(props) {\n\n  const location = {\n    lat: +props.lat,\n    lng: +props.lng\n  };\n\n\n  const {isLoaded, loadError } = useLoadScript({\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n    \n  }) \n\n  const [markers, setMarkers] = useState([]);\n  console.log(markers); //saves all of the relavant data from the player in array of \n  //markers: 0: { lat: 37.34483551763062, lng: -121.90567283828123, time: Thu Jan 21 2021 11: 54: 59 GMT - 0800(Pacific Standard Time) }\n  //1: {lat: 37.35766266092734, lng: -121.88129692275389, time ... } \n  const [selected, setSelected] = useState(null);\n  //console.log(selected);\n\n  //ADD AREAS FROM BACKEND\n\n  //run side effects such as making AJAX requesets \n  //make AJAX request when compoenent first renders \n  useEffect(() => {\n    getAreas();\n  }, []);\n//peice of state to hold data returned from AJAX \n\n\n//makes the AJAX request with service module \n  async function getAreas() {\n    const data = await fetchAreas();\n    console.log('DATA', data)\n    //add data from AJAX request to state \n    setMarkers(data) //can use the same peice of state for markers \n  }\n\n\n  //CALLS ADD AREA INSIDE AREAS SERVICE \n  async function handleAddArea(markers) { //how to call this function? \n    const data = await addAreas(markers)\n    console.log('sending data', data, markers)\n    setMarkers(markers)\n   \n  }\n\n  \n\n  const onMapClick = useCallback((event) => { //change event to location for production \n    setMarkers(current => [ //receive current state and spread out the new version of it \n      ...current,\n\n      {\n        //Change for production version \n        // lat: +location.lat,\n        // lng: +location.lng, \n        lat: event.latLng.lat(),\n        lng: event.latLng.lng(),\n        time: new Date()\n      },\n     // handleAddArea()\n   \n    ]);\n  }, []);\n\n\n\n\n  const mapRef = useRef(); //retains state without a rerender \n  const onMapLoad = useCallback((map) => {\n    mapRef.current = map;\n  }, []);\n\n  const panTo = useCallback(({ lat, lng }) => {\n    mapRef.current.panTo({ lat, lng });\n    mapRef.current.setZoom(14);\n  }, []);\n  \n\n\n  if (loadError) return \"Error Loading Maps\";\n  if (!isLoaded) return \"Laoding Maps\"; \n\n\n  \n  \n\n\n  return (\n    <div> \n      <GoogleMap\n        mapContainerStyle={mapContainerStyle}\n        zoom={12}\n        center={location}\n        options={options}\n        onClick={onMapClick} //remove for production\n        //onClick={handleAddArea}\n        onLoad={onMapLoad}\n      >\n\n        {markers.map(marker => (\n          <Marker\n            key={marker.lat} //marker.time.toISOString()\n            position={{lat: marker.lat, lng: marker.lng}} //repalce { lat: marker.lat, lng: marker.lng } with location \n            onClick={() => setSelected(marker)} //keep same \n           // onClick={() => handleAddArea(marker)}\n          />\n        ))}\n        {selected ? (\n          <InfoWindow position={{ lat: selected.lat, lng: selected.lng }} onCloseClick={() => setSelected(null)}>\n          <div>\n          <h2>Player holds this area</h2>\n            {/* <p>Since {formatRelative(selected.time, new Date())}</p> */}\n            </div>\n          </InfoWindow>) : null}\n          <Polygon\n            path={markers}\n            key={markers.time}\n            options={{\n                fillColor: \"#000\",\n                fillOpacity: 0.4,\n                strokeColor: \"#000\",\n                strokeOpacity: 1,\n                strokeWeight: 1\n          }} /> \n   \n      </GoogleMap>\n      <Locate panTo={panTo} /> \n      {/* <button onClick={() => onMapClick(location)}>Set Markers</button>  ADD for production version*/}\n      <button onClick={() => handleAddArea(markers)}>Testing</button>\n    </div>\n    \n  );\n}\n\n\n\nexport default Dashboard;","/Users/miraheckmann/Desktop/proj3-client/src/pages/Signup/index.js",[],"/Users/miraheckmann/Desktop/proj3-client/src/pages/Home/index.js",[],"/Users/miraheckmann/Desktop/proj3-client/src/pages/Login/index.js",[],"/Users/miraheckmann/Desktop/proj3-client/src/services/tokenService.js",["70"],"function setToken(token) {\n    if (token) {\n        localStorage.setItem('token', token)\n    } else {\n        removeToken();\n    }\n}\n\nfunction removeToken() {\n    localStorage.removeItem('token');\n}\n\nfunction getUserFromToken() {\n    const token = getToken();\n    return token ? JSON.parse(atob(token.split('.')[1])).user : null;\n}\n\nfunction getToken() {\n    const token = localStorage.getItem('token');\n    if (token) {\n        const payload = JSON.parse(atob(token.split('.')[1]));\n        if (payload.exp < Date.now() / 1000) {\n            removeToken(); \n            token = null; \n        }\n    }\n    return token;\n}\n\nexport {\n    setToken,\n    removeToken,\n    getUserFromToken,\n    getToken,\n}","/Users/miraheckmann/Desktop/proj3-client/src/services/geolocation.js",[],"/Users/miraheckmann/Desktop/proj3-client/src/components/Locate/Locate.js",[],["71","72"],"/Users/miraheckmann/Desktop/proj3-client/src/pages/Dashboard/map-style.js",[],"/Users/miraheckmann/Desktop/proj3-client/src/services/areasService.js",[],{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":4,"column":10,"nodeType":"79","messageId":"80","endLine":4,"endColumn":24},{"ruleId":"77","severity":1,"message":"81","line":4,"column":26,"nodeType":"79","messageId":"80","endLine":4,"endColumn":40},{"ruleId":"82","severity":1,"message":"83","line":24,"column":13,"nodeType":"79","messageId":"84","endLine":24,"endColumn":18},{"ruleId":"73","replacedBy":"85"},{"ruleId":"75","replacedBy":"86"},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"no-unused-vars","'formatRelative' is defined but never used.","Identifier","unusedVar","'setISOWeekYear' is defined but never used.","no-const-assign","'token' is constant.","const",["87"],["88"],"no-global-assign","no-unsafe-negation"]